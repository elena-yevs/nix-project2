public interface BaseTypesUtil {

    /**
     * Метод переводит число из експоненциальной записи в обычную и наоборот.
     *
     *<p>Если строка на входе является числом с плавающей точкой записанным в научной (экспоненциальной) форме,
     *
     *<p>то на выходе будет это число в обчной форме. И наоборот, если строка на входе является числом записанным к обычной форме,
     *
     *<p>то на выходе это число будет в научной (экспоненциальной). Преобразование не должно зависить от локали и
     *
     *<p>результирующая строка должна соответсвовать требованиям спецификации языка для числовых литералов.
     *
     *<p>При преобразовании сохранять не более 16 цифр после запятой.
     * @param str
     * @return
     */
    String toggleScientificNotation(String str);

    /**
     * Метод возвращает отсортированный массив, который подается на вход,
     *
     * <p>при этом исходный массив не должен быть изменен.
     * @param array
     * @return
     */
    int[] sort(int[] array);

    /**
     * Метод расчитывает среднее арифметическое значений всех элементов массива.
     * @param array
     * @return
     */
    float arithmeticMean(int[] array);

    /**
     * Метод форматирует число с плавающей точкой в соответсвии с локалью для указанного языка.
     * @param n
     * @param language
     * @return
     */
    String format(double n, String language);

    /**
     * Метод сложения двух чисел произвольного типа и произвольной размерности.
     *
     * <p>Результат не должен зависить от локали и должен соответсвовать требованиям спецификации языка для числовых литералов.
     * @param value1
     * @param value2
     * @return
     */
    String plus(String value1, String value2);

    /**
     * Метод вычитания двух чисел произвольного типа и произвольной размерности.
     *
     * <p>Результат не должен специально форматироваться.
     * @param value1
     * @param value2
     * @return
     */
    String minus(String value1, String value2);

    /**
     * Метод умножения двух чисел произвольного типа и произвольной размерности.
     *
     *<p>Результат не должен специально форматироваться
     * @param value1
     * @param value2
     * @return
     */
    String mul(String value1, String value2);

    /**
     * Метод деления двух чисел произвольного типа и произвольной размерности.
     *
     *<p>Результат не должен специально форматироваться
     * @param value1
     * @param value2
     * @return
     */
    String div(String value1, String value2);
}
